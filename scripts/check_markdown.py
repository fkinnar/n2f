#!/usr/bin/env python3
"""
Script de v√©rification des fichiers Markdown.

Ce script v√©rifie rapidement la qualit√© de tous les fichiers Markdown
du projet sans les modifier.
"""

import subprocess
import sys
from pathlib import Path


def check_markdown_file(file_path):
    """V√©rifie un fichier Markdown avec markdownlint."""
    try:
        result = subprocess.run(
            f'markdownlint "{file_path}"',
            shell=True,
            capture_output=True,
            text=True,
            check=False,
        )

        if result.returncode == 0:
            print(f"‚úÖ {file_path.name} - Aucun probl√®me")
            return True
        else:
            print(f"‚ùå {file_path.name} - Probl√®mes d√©tect√©s:")
            if result.stderr:
                print(f"   {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"‚ùå {file_path.name} - Erreur: {e}")
        return False


def main():
    """Fonction principale."""
    print("üîç V√©rification des fichiers Markdown")
    print("=" * 50)

    # Trouver tous les fichiers Markdown
    project_root = Path(__file__).parent.parent
    markdown_files = [
        f
        for f in project_root.rglob("*.md")
        if not any(
            part.startswith(".") or part in ["env", "venv", "__pycache__"]
            for part in f.parts
        )
    ]

    print(f"\nüìÅ {len(markdown_files)} fichiers Markdown trouv√©s")

    if not markdown_files:
        print("‚ùå Aucun fichier Markdown trouv√©")
        return

    # V√©rifier chaque fichier
    print("\nüîç V√©rification en cours...")
    print("-" * 50)

    total_files = len(markdown_files)
    valid_files = 0

    for file in markdown_files:

        if check_markdown_file(file):
            valid_files += 1

    # R√©sum√©
    print("\n" + "=" * 50)
    print("üìä R√âSUM√â")
    print("=" * 50)
    print(f"Total de fichiers: {total_files}")
    print(f"Fichiers valides: {valid_files}")
    print(f"Fichiers avec probl√®mes: {total_files - valid_files}")

    if valid_files == total_files:
        print("\nüéâ Tous les fichiers Markdown sont conformes !")
    else:
        print(f"\n‚ö†Ô∏è  {total_files - valid_files} fichier(s) ont des probl√®mes.")
        print("   Ex√©cutez 'python scripts/fix_markdown.py' pour les corriger.")


if __name__ == "__main__":
    main()
